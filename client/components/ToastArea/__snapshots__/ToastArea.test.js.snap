// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ToastArea should render empty correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ToastArea
    closeToast={null}
    toasts={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": null,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": null,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`ToastArea should render toasts correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ToastArea
    closeToast={null}
    toasts={
      Array [
        Object {
          "id": "id1",
          "success": true,
          "text": "win!",
        },
        Object {
          "id": "id2",
          "text": "fail!",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Toast
          id="id1"
          onClickClose={[Function]}
          success={true}
          text="win!"
        />,
        <Toast
          id="id2"
          onClickClose={[Function]}
          success={false}
          text="fail!"
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "id1",
        "nodeType": "function",
        "props": Object {
          "id": "id1",
          "onClickClose": [Function],
          "success": true,
          "text": "win!",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "id2",
        "nodeType": "function",
        "props": Object {
          "id": "id2",
          "onClickClose": [Function],
          "success": false,
          "text": "fail!",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Toast
            id="id1"
            onClickClose={[Function]}
            success={true}
            text="win!"
          />,
          <Toast
            id="id2"
            onClickClose={[Function]}
            success={false}
            text="fail!"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "id1",
          "nodeType": "function",
          "props": Object {
            "id": "id1",
            "onClickClose": [Function],
            "success": true,
            "text": "win!",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "id2",
          "nodeType": "function",
          "props": Object {
            "id": "id2",
            "onClickClose": [Function],
            "success": false,
            "text": "fail!",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
